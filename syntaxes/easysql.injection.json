{
  "scopeName": "easysql.injection",
  "injectionSelector": "L:source.sql",
  "patterns": [
    { "include": "#config" },
    { "include": "#config-backend" },
    { "include": "#config-owner" },
    { "include": "#config-schedule" },
    { "include": "#config-inout" },
    { "include": "#include" },
    { "include": "#target-invalid" },
    { "include": "#target" },
    { "include": "#var-reference-in-body" },
    { "include": "#var-reference-func-in-body" },
    { "include": "#var-reference-in-body-invalid" },
    { "include": "#tpl-var-reference-in-body" },
    { "include": "#tpl-var-reference-in-body-invalid" },
    { "include": "#tpl-reference-in-body" },
    { "include": "#tpl-reference-func-in-body" },
    { "include": "#tpl-reference-in-body-invalid" }
  ],
  "repository": {
    "config": {
      "match": "(^-- )(config)(:)\\s*([^=]*)(=)?(.*)(?=\\n)",
      "captures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.config.easysql"
        },
        "3": {
          "name": "punctuation.separator.config.easysql"
        },
        "4": {
          "name": "constant.config.name.easysql"
        },
        "5": {
          "name": "keyword.operator.assignment.easysql"
        },
        "6": {
          "name": "constant.config.value.easysql"
        }
      }
    },
    "config-backend": {
      "match": "(^-- )(backend)(:)\\s*(\\w*)\\s*(.*)?(?=\\n)",
      "captures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.config.backend.easysql"
        },
        "3": {
          "name": "punctuation.separator.config.easysql"
        },
        "4": {
          "name": "constant.backend.name.easysql"
        },
        "5": {
          "name": "invalid.illegal.word.easysql"
        }
      }
    },
    "config-schedule": {
      "match": "(^-- )(schedule)(:)(.*)(?=\\n)",
      "captures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.config.schedule.easysql"
        },
        "3": {
          "name": "punctuation.separator.config.easysql"
        },
        "4": {
          "name": "constant.schedule.value.easysql"
        }
      }
    },
    "config-owner": {
      "begin": "(^-- )(owner)(:)",
      "beginCaptures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.config.simple.easysql"
        },
        "3": {
          "name": "punctuation.separator.config.easysql"
        }
      },
      "end": "(?=\\n)",
      "patterns": [
        { "match": ",", "name": "punctuation.separator.owner.easysql" },
        {
          "match": "(?<=:|,)\\s*\\w+\\b",
          "name": "constant.owner.id.easysql"
        },
        {
          "match": ".*",
          "name": "invalid.illegal.word.easysql"
        }
      ]
    },
    "config-inout": {
      "begin": "(^-- )(inputs|outputs)(:)",
      "beginCaptures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.config.inout.easysql"
        },
        "3": {
          "name": "punctuation.separator.config.easysql"
        }
      },
      "end": "(?=\\n)",
      "patterns": [
        { "match": ",", "name": "punctuation.separator.inout.easysql" },
        { "include": "#full-table-name-with-schema" },
        { "include": "#full-table-name" }
      ]
    },
    "include": {
      "match": "(^-- )(include)(=)(.*)(?=\\n)",
      "captures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.include.easysql"
        },
        "3": {
          "name": "keyword.operator.assignment.easysql"
        },
        "4": {
          "name": "constant.include.value.easysql"
        }
      }
    },
    "target-invalid": {
      "match": "(^-- )(target)(=)((?!variables|list_variables|template|log|check|action|temp|cache|broadcast|output|func).*)",
      "captures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.target.easysql"
        },
        "3": {
          "name": "keyword.operator.assignment.easysql"
        },
        "4": {
          "name": "invalid.illegal.word.easysql"
        }
      }
    },
    "target": {
      "name": "meta.step.easysql",
      "begin": "(^-- )(target)(=)",
      "beginCaptures": {
        "1": {
          "name": "keyword.start.easysql"
        },
        "2": {
          "name": "keyword.target.easysql"
        },
        "3": {
          "name": "keyword.operator.assignment.easysql"
        }
      },
      "end": "(?=\\n)",
      "patterns": [
        { "include": "#target-variables" },
        { "include": "#target-variables-invalid" },
        { "include": "#target-other" },
        { "include": "#target-other-invalid" },
        { "include": "#target-table" },
        { "include": "#target-table-invalid" },
        { "include": "#target-output" },
        { "include": "#target-output-if" },
        { "include": "#target-check" },
        { "include": "#target-check-if" },
        { "include": "#target-check-func-if" },
        { "include": "#target-func" },
        { "include": "#target-func-if" }
      ]
    },
    "target-variables": {
      "name": "meta.variables.easysql",
      "begin": "(?<==)\\b(variables|list_variables)\\b(?=,\\s*if=)",
      "beginCaptures": {
        "1": {
          "name": "keyword.target.type.variables.easysql"
        }
      },
      "end": "(?=\\n)",
      "patterns": [{ "include": "#if" }]
    },
    "target-variables-invalid": {
      "name": "meta.variables.easysql",
      "match": "(?<==)\\b(variables|list_variables)\\b(.*)",
      "captures": {
        "1": {
          "name": "keyword.target.type.variables.easysql"
        },
        "2": {
          "name": "invalid.illegal.word.easysql"
        }
      }
    },
    "target-other": {
      "name": "meta.other.easysql",
      "begin": "(?<==)\\b(template|log|action)(\\.)(\\w+)\\s*(?=,\\s*if=)",
      "beginCaptures": {
        "1": {
          "name": "keyword.target.type.other.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        },
        "3": {
          "name": "constant.other.step-name.easysql"
        }
      },
      "end": "(?=\\n)",
      "patterns": [{ "include": "#if" }]
    },
    "target-other-invalid": {
      "name": "meta.other.easysql",
      "match": "(?<==)\\b(template|log|action)(\\.)(\\w+)\\s*(.*)(?=\\n)",
      "captures": {
        "1": {
          "name": "keyword.target.type.other.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        },
        "3": {
          "name": "constant.other.step-name.easysql"
        },
        "4": {
          "name": "invalid.illegal.word.easysql"
        }
      }
    },
    "target-table": {
      "name": "meta.table.easysql",
      "begin": "(?<==)\\b(temp|cache|broadcast)(\\.)(\\w+)\\s*(?=,\\s*if=)",
      "beginCaptures": {
        "1": {
          "name": "keyword.target.type.table.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        },
        "3": {
          "name": "constant.other.table-name.easysql"
        }
      },
      "end": "(?=\\n)",
      "patterns": [{ "include": "#if" }]
    },
    "target-table-invalid": {
      "name": "meta.table.easysql",
      "match": "(?<==)\\b(temp|cache|broadcast)(\\.)(\\w+)\\s*(.*)(?=\\n)",
      "captures": {
        "1": {
          "name": "keyword.target.type.table.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        },
        "3": {
          "name": "constant.other.table-name.easysql"
        },
        "4": {
          "name": "invalid.illegal.word.easysql"
        }
      }
    },
    "target-output": {
      "name": "meta.output.easysql",
      "begin": "(?<==)\\b(output)(\\.)",
      "beginCaptures": {
        "1": {
          "name": "keyword.target.type.output.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        }
      },
      "end": "(?=\\n|,)",
      "patterns": [
        { "include": "#full-table-name-with-schema" },
        { "include": "#full-table-name" }
      ]
    },
    "target-output-if": {
      "name": "meta.output.easysql",
      "begin": "(?<==\\boutput[^,]+)(?=,\\s*if=)",
      "end": "(?=\\n)",
      "patterns": [{ "include": "#if" }]
    },
    "target-check": {
      "name": "meta.check.easysql",
      "begin": "(?<==)\\b(check)(\\.)",
      "beginCaptures": {
        "1": {
          "name": "keyword.target.type.check.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        }
      },
      "end": "(?=(,\\s*if=)|\\n)",
      "patterns": [
        { "include": "#func-call" },
        {
          "match": "(?<=check.)(\\w+)\\b\\s*([^,]*)(?=\\n|,)",
          "captures": {
            "1": {
              "name": "constant.other.step-name.easysql"
            },
            "2": {
              "name": "invalid.illegal.word.easysql"
            }
          }
        }
      ]
    },
    "target-check-if": {
      "name": "meta.check.easysql",
      "begin": "(?<==check[^,]+)(?=,\\s*if=)",
      "end": "(?=\\n)",
      "patterns": [{ "include": "#if" }]
    },
    "target-check-func-if": {
      "name": "meta.check.easysql",
      "begin": "(?<==check.+\\([^)]+\\)\\s*)(?=,\\s*if=)",
      "end": "(?=\\n)",
      "patterns": [{ "include": "#if" }]
    },
    "target-func": {
      "name": "meta.func.easysql",
      "begin": "(?<==)\\b(func)(\\.)",
      "beginCaptures": {
        "1": {
          "name": "keyword.target.type.func.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        }
      },
      "end": "(?=(,\\s*if=)|\\n)",
      "patterns": [
        { "include": "#func-call" },
        { "include": "#func-call-invalid" }
      ]
    },
    "target-func-if": {
      "name": "meta.func.easysql",
      "begin": "(?<==func.+\\([^)]+\\)\\s*)(?=,\\s*if=)",
      "end": "(?=\\n)",
      "patterns": [{ "include": "#if" }]
    },
    "var-reference-in-body": {
      "name": "meta.var-reference.body.easysql",
      "match": "(?<!--.*)(\\${)(\\w+)(})",
      "captures": {
        "1": { "name": "punctuation.definition.var-reference.begin.easysql" },
        "2": { "name": "variable.parameter.name.easysql" },
        "3": { "name": "punctuation.definition.var-reference.end.easysql" }
      }
    },
    "var-reference-func-in-body": {
      "name": "meta.var-reference.func.body.easysql",
      "begin": "(?<!--.*)(\\${)\\s*(?=\\w+\\s*\\()",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.var-reference.func.begin.easysql"
        }
      },
      "end": "(?<=\\)\\s*)(})",
      "endCaptures": {
        "1": { "name": "punctuation.definition.var-reference.func.end.easysql" }
      },
      "patterns": [
        { "include": "#func-call" },
        { "include": "#func-call-invalid" }
      ]
    },
    "var-reference-in-body-invalid": {
      "name": "meta.var-reference.body.easysql",
      "match": "(?<!--.*)(\\${)(.*)(})",
      "captures": {
        "1": { "name": "punctuation.definition.var-reference.begin.easysql" },
        "2": { "name": "invalid.illegal.word.easysql" },
        "3": { "name": "punctuation.definition.var-reference.end.easysql" }
      }
    },
    "tpl-var-reference-in-body": {
      "name": "meta.tpl-var-reference.body.easysql",
      "match": "(?<!--.*)(\\#{)(\\w+)(})",
      "captures": {
        "1": {
          "name": "punctuation.definition.tpl-var-reference.begin.easysql"
        },
        "2": { "name": "variable.parameter.name.easysql" },
        "3": { "name": "punctuation.definition.tpl-var-reference.end.easysql" }
      }
    },
    "tpl-var-reference-in-body-invalid": {
      "name": "meta.tpl-var-reference.body.easysql",
      "match": "(?<!--.*)(\\#{)([^}]*)(})",
      "captures": {
        "1": {
          "name": "punctuation.definition.tpl-var-reference.begin.easysql"
        },
        "2": { "name": "invalid.illegal.word.easysql" },
        "3": { "name": "punctuation.definition.tpl-var-reference.end.easysql" }
      }
    },
    "tpl-reference-in-body": {
      "name": "meta.tpl-reference.body.easysql",
      "match": "(?<!--.*)(\\@{)(\\w+)(})",
      "captures": {
        "1": { "name": "punctuation.definition.tpl-reference.begin.easysql" },
        "2": { "name": "entity.name.function.tpl.easysql" },
        "3": { "name": "punctuation.definition.tpl-reference.end.easysql" }
      }
    },
    "tpl-reference-func-in-body": {
      "name": "meta.tpl-reference.func.body.easysql",
      "begin": "(?<!--.*)(\\@{)\\s*(?=\\w+\\s*\\()",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tpl-reference.func.begin.easysql"
        }
      },
      "end": "(?<=\\)\\s*)(})",
      "endCaptures": {
        "1": { "name": "punctuation.definition.tpl-reference.func.end.easysql" }
      },
      "patterns": [
        { "include": "#tpl-call" },
        { "include": "#tpl-call-invalid" }
      ]
    },
    "tpl-reference-in-body-invalid": {
      "name": "meta.tpl-reference.body.easysql",
      "match": "(?<!--.*)(\\@{)([^}]*)(})",
      "captures": {
        "1": { "name": "punctuation.definition.tpl-reference.begin.easysql" },
        "2": { "name": "invalid.illegal.word.easysql" },
        "3": { "name": "punctuation.definition.tpl-reference.end.easysql" }
      }
    },
    "full-table-name": {
      "captures": {
        "1": {
          "name": "constant.other.db-name.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        },
        "3": {
          "name": "constant.other.table-name.easysql"
        },
        "4": {
          "name": "invalid.illegal.word.easysql"
        }
      },
      "match": "(\\w+)(\\.)(\\w+)\\s*([^,]*)(?=\\n|,)"
    },
    "full-table-name-with-schema": {
      "captures": {
        "1": {
          "name": "constant.other.db-name.easysql"
        },
        "2": {
          "name": "keyword.operator.dot.easysql"
        },
        "3": {
          "name": "constant.other.schema-name.easysql"
        },
        "4": {
          "name": "keyword.operator.dot.easysql"
        },
        "5": {
          "name": "constant.other.table-name.easysql"
        },
        "6": {
          "name": "invalid.illegal.word.easysql"
        }
      },
      "match": "(\\w+)(\\.)(\\w+)(\\.)(\\w+)\\s*([^,]*)(?=\\n|,)"
    },
    "if": {
      "name": "meta.if.easysql",
      "begin": "(,)\\s*(if)(=)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.separator.if.easysql"
        },
        "2": {
          "name": "keyword.if.easysql"
        },
        "3": {
          "name": "keyword.operator.assignment.easysql"
        }
      },
      "end": "(?=\\n)",
      "patterns": [
        { "include": "#func-call" },
        { "include": "#func-call-invalid" }
      ]
    },
    "func-call": {
      "name": "meta.function.easysql",
      "begin": "(?<=\\.|=|{)(\\w+)(\\()",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function"
        },
        "2": {
          "name": "punctuation.definition.parameters.begin.easysql"
        }
      },
      "end": "(?<=[^)]+)(\\))([^,]*?)(?=}|,|\\n)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.parameters.end.easysql"
        },
        "2": {
          "name": "invalid.illegal.function.easysql"
        }
      },
      "patterns": [
        {
          "name": "punctuation.separator.arguments.easysql",
          "match": "(,)"
        },
        { "include": "#var-reference-in-func-invalid" },
        { "include": "#var-reference-in-func" },
        {
          "match": "(?<=[,(])\\s*([^,)]+)(?=[,)])",
          "captures": {
            "1": {
              "name": "constant.other.literal.easysql"
            }
          }
        }
      ]
    },
    "func-call-invalid": {
      "name": "invalid.illegal.function.easysql",
      "match": "(?<=\\.|=)(.*)",
      "captures": {
        "1": {
          "name": "invalid.illegal.word.easysql"
        }
      }
    },
    "var-reference-in-func": {
      "name": "meta.var-reference.easysql",
      "match": "(?<=[,(])\\s*(\\${)\\s*(\\w+)\\s*(})",
      "captures": {
        "1": {
          "name": "punctuation.definition.var-reference.begin.easysql"
        },
        "2": {
          "name": "variable.parameter.name.easysql"
        },
        "3": {
          "name": "punctuation.definition.var-reference.end.easysql"
        }
      }
    },
    "var-reference-in-func-invalid": {
      "name": "meta.var-reference.easysql",
      "match": "(?<=[,(])\\s*(\\${)\\s*(\\w*[^\\w]\\w*)\\s*(})",
      "captures": {
        "1": {
          "name": "punctuation.definition.var-reference.begin.easysql"
        },
        "2": {
          "name": "invalid.illegal.word.easysql"
        },
        "3": {
          "name": "punctuation.definition.var-reference.end.easysql"
        }
      }
    },
    "tpl-call": {
      "name": "meta.function.tpl.easysql",
      "begin": "(?<=@{)(\\w+)(\\()",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.tpl.easysql"
        },
        "2": {
          "name": "punctuation.reference.tpl.begin.easysql"
        }
      },
      "end": "(?<=[^)]+)(\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.reference.tpl.end.easysql"
        }
      },
      "patterns": [
        {
          "name": "punctuation.separator.arguments.easysql",
          "match": "(,)"
        },
        { "include": "#var-reference-in-tpl" },
        { "include": "#var-reference-in-tpl-invalid" },
        {
          "match": "(?<=[,(]|^)\\s*(\\w+)\\s*(=)\\s*([^,)]*)(?=[,)\\n])",
          "captures": {
            "1": {
              "name": "variable.parameter.name.tpl.easysql"
            },
            "2": {
              "name": "keyword.operator.assignment.easysql"
            },
            "3": {
              "name": "constant.other.literal.easysql"
            }
          }
        },
        {
          "match": "(?<=[,(\\n])\\s*([^=,)]+)(?=[,)])",
          "captures": {
            "1": {
              "name": "invalid.illegal.word.easysql"
            }
          }
        }
      ]
    },
    "tpl-call-invalid": {
      "name": "invalid.illegal.function.tpl.easysql",
      "match": "(?<=@{)(.*)",
      "captures": {
        "1": {
          "name": "invalid.illegal.word.easysql"
        }
      }
    },
    "var-reference-in-tpl": {
      "name": "meta.tpl-var.easysql",
      "match": "(?<=[,(]|^)\\s*(\\w+)\\s*(=)\\s*(\\${)\\s*(\\w+)\\s*(})",
      "captures": {
        "1": {
          "name": "variable.parameter.name.tpl.easysql"
        },
        "2": {
          "name": "keyword.operator.assignment.easysql"
        },
        "3": {
          "name": "punctuation.definition.var-reference.begin.easysql"
        },
        "4": {
          "name": "variable.parameter.name.easysql"
        },
        "5": {
          "name": "punctuation.definition.var-reference.end.easysql"
        }
      }
    },
    "var-reference-in-tpl-invalid": {
      "name": "meta.tpl-var.easysql",
      "match": "(?<=[,(])\\s*(\\w+)\\s*(=)\\s*(\\${)\\s*(.*)\\s*(})",
      "captures": {
        "1": {
          "name": "variable.parameter.name.tpl.easysql"
        },
        "2": {
          "name": "keyword.operator.assignment.easysql"
        },
        "3": {
          "name": "punctuation.definition.var-reference.begin.easysql"
        },
        "4": {
          "name": "invalid.illegal.word.easysql"
        },
        "5": {
          "name": "punctuation.definition.var-reference.end.easysql"
        }
      }
    }
  }
}
